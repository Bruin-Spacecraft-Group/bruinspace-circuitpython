name: Build RAPID-0 Boards

on:
  push:

jobs:
  build:
    uses: $GITHUB_WORKSPACE/.github/workflows/build-boards.yml@board
    with:
      boards: [rapid0_adcs, rapid0_cdh, rapid0_eps, nucleo_h743zi_2]
      cp-version: bruinspace-dev

# name: Build boards

# on:
#   workflow_call:
#     inputs:
#       boards:
#         required: true
#         type: string
#       cp-version:
#         required: true
#         type: string
#     secrets:
#       AWS_ACCESS_KEY_ID:
#         required: false
#       AWS_SECRET_ACCESS_KEY:
#         required: false

# jobs:
#     - name: Set up build failure matcher
#       run: echo "::add-matcher::$GITHUB_WORKSPACE/.github/workflows/match-build-fail.json"

#     - name: Build board
#       run: python3 -u build_release_files.py
#       working-directory: tools
#       env:
#         BOARDS: ${{ matrix.board }}
#         PULL: ${{ github.event.number }}
#         HEAD_COMMIT_MESSAGE: ${{ github.event.head_commit.message }}

#     - name: Upload artifact
#       uses: actions/upload-artifact@v4
#       with:
#         name: ${{ matrix.board }}
#         path: bin/${{ matrix.board }}


# jobs:

#   build:
#     runs-on: ubuntu-latest
#     strategy:
#       fail-fast: false
#       matrix:
#         # TODO: set boards to be cdh, eps, and adcs
#         board: [rapid0_cdh, nucleo_h743zi_2]
#         cp-version: ["bruinspace-dev"] # not sure if this is appropriate use

#     steps:
#     - name: Set up repository
#       uses: actions/checkout@v4
#       with:
#         submodules: false
#         show-progress: false
#         fetch-depth: 1

#     - name: Set up python
#       uses: actions/setup-python@v5
#       with:
#         python-version: 3.x

#     - name: Set up ports
#       id: set-up-port
#       uses: ./.github/actions/deps/ports
#       with:
#         board: ${{ matrix.board }}

#     - name: Set up submodules
#       id: set-up-submodules
#       uses: ./.github/actions/deps/submodules

#     - name: Set up external
#       uses: ./.github/actions/deps/external
#       with:
#         action: cache
#         port: ${{ steps.set-up-port.outputs.port }}

#     - name: Set up mpy-cross
#       if: steps.set-up-submodules.outputs.frozen == 'True'
#       uses: ./.github/actions/mpy_cross
#       with:
#         cp-version: ${{ matrix.cp-version }}

#     - name: Versions
#       run: |
#         gcc --version
#         python3 --version
#         cmake --version || true
#         ninja --version || true
#         aarch64-none-elf-gcc --version || true
#         arm-none-eabi-gcc --version || true
#         xtensa-esp32-elf-gcc --version || true
#         riscv32-esp-elf-gcc --version || true
#         riscv64-unknown-elf-gcc --version || true
#         mkfs.fat --version || true

#     - name: Set up build failure matcher
#       run: echo "::add-matcher::$GITHUB_WORKSPACE/.github/workflows/match-build-fail.json"

#     - name: Build board
#       run: python3 -u build_release_files.py
#       working-directory: tools
#       env:
#         BOARDS: ${{ matrix.board }}
#         PULL: ${{ github.event.number }}
#         HEAD_COMMIT_MESSAGE: ${{ github.event.head_commit.message }}


#     - name: Build boards
#       run: make -j4 -C ports/stm BOARD=${{ matrix.board }}
#     - name: Upload artifacts
#       uses: actions/upload-artifact@v4
#       with:
#         name: ${{ matrix.board }}
#         path: ports/stm/build-${{ matrix.board }}/firmware.*
#         overwrite: true

